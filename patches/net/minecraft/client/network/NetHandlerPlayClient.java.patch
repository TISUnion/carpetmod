--- a/net/minecraft/client/network/NetHandlerPlayClient.java
+++ b/net/minecraft/client/network/NetHandlerPlayClient.java
@@ -1,5 +1,11 @@
 package net.minecraft.client.network;
 
+import carpet.network.CarpetClient;
+import carpet.network.CarpetClientNetworkHandler;
+import carpet.network.tiscm.TISCMClientPacketHandler;
+import carpet.network.tiscm.TISCMProtocol;
+import carpet.settings.CarpetSettings;
+import carpet.utils.LightTrackingHooks;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.util.concurrent.FutureCallback;
@@ -23,6 +29,7 @@
 import javax.annotation.Nullable;
 import net.minecraft.advancements.Advancement;
 import net.minecraft.block.Block;
+import net.minecraft.block.state.IBlockState;
 import net.minecraft.client.ClientBrandRetriever;
 import net.minecraft.client.GameSettings;
 import net.minecraft.client.Minecraft;
@@ -117,6 +124,7 @@
 import net.minecraft.entity.projectile.EntityTippedArrow;
 import net.minecraft.entity.projectile.EntityTrident;
 import net.minecraft.entity.projectile.EntityWitherSkull;
+import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
 import net.minecraft.init.Particles;
 import net.minecraft.init.SoundEvents;
@@ -242,18 +250,7 @@
 import net.minecraft.tags.FluidTags;
 import net.minecraft.tags.ItemTags;
 import net.minecraft.tags.NetworkTagManager;
-import net.minecraft.tileentity.TileEntity;
-import net.minecraft.tileentity.TileEntityBanner;
-import net.minecraft.tileentity.TileEntityBeacon;
-import net.minecraft.tileentity.TileEntityBed;
-import net.minecraft.tileentity.TileEntityCommandBlock;
-import net.minecraft.tileentity.TileEntityConduit;
-import net.minecraft.tileentity.TileEntityEndGateway;
-import net.minecraft.tileentity.TileEntityMobSpawner;
-import net.minecraft.tileentity.TileEntityShulkerBox;
-import net.minecraft.tileentity.TileEntitySign;
-import net.minecraft.tileentity.TileEntitySkull;
-import net.minecraft.tileentity.TileEntityStructure;
+import net.minecraft.tileentity.*;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.EnumHand;
 import net.minecraft.util.ResourceLocation;
@@ -335,6 +332,12 @@
         this.client.playerController.setGameType(packetIn.getGameType());
         this.client.gameSettings.sendSettingsToServer();
         this.netManager.sendPacket(new CPacketCustomPayload(CPacketCustomPayload.BRAND, (new PacketBuffer(Unpooled.buffer())).writeString(ClientBrandRetriever.getClientModName())));
+
+        // Carpet protocol
+        CarpetClient.gameJoined(client.player);
+
+        // TISCM protocol
+        TISCMClientPacketHandler.getInstance().onConnectedToNewServer();
     }
 
     public void handleSpawnObject(SPacketSpawnObject packetIn)
@@ -797,7 +800,28 @@
             {
                 tileentity.read(nbttagcompound);
             }
+
+            // Carpet smoothClientAnimations
+            // fix as suggested by G4me4u
+            if (CarpetSettings.smoothClientAnimations && tileentity == null)
+            {
+                if ("minecraft:piston".equals(nbttagcompound.getString("id")))
+                {
+                    IBlockState blockState = world.getBlockState(blockpos);
+                    if (blockState.getBlock() == Blocks.MOVING_PISTON) {
+                        nbttagcompound.putFloat("progress", Math.min(nbttagcompound.getFloat("progress") + 0.5F, 1.0F));
+                        tileentity = new TileEntityPiston();
+                        tileentity.read(nbttagcompound);
+                        this.world.setTileEntity(blockpos, tileentity);
+                        tileentity.updateContainingBlockInfo();
+                    }
+                }
+            }
         }
+        
+        // [TISCM] Newlight
+        if (CarpetSettings.newLight)
+            LightTrackingHooks.onChunkReceive(chunk, packetIn.getExtractedSize());
     }
 
     public void processChunkUnload(SPacketUnloadChunk packetIn)
@@ -818,6 +842,9 @@
     public void handleDisconnect(SPacketDisconnect packetIn)
     {
         this.netManager.closeChannel(packetIn.getReason());
+
+        // Carpet protocol
+        CarpetClient.disconnect();
     }
 
     public void onDisconnect(ITextComponent reason)
@@ -1099,6 +1126,9 @@
 
         this.client.func_212315_a(packetIn.getDimension());
         this.client.playerController.setGameType(packetIn.getGameType());
+
+        // TISCM protocol
+        TISCMClientPacketHandler.getInstance().onConnectedToNewServer();
     }
 
     public void handleExplosion(SPacketExplosion packetIn)
@@ -1954,6 +1984,21 @@
 
     public void handleCustomPayload(SPacketCustomPayload packetIn)
     {
+        // Carpet protocol
+        ResourceLocation channel = packetIn.getChannelName();
+        if (CarpetClient.CARPET_CHANNEL.equals(channel))
+        {
+            CarpetClientNetworkHandler.handleData(packetIn.getBufferData(), this.client.player);
+            return;
+        }
+
+        // TISCM protocol
+        if (TISCMProtocol.CHANNEL.equals(channel))
+        {
+            TISCMClientPacketHandler.getInstance().dispatch(this, packetIn.getBufferData());
+            return;
+        }
+
         PacketThreadUtil.checkThreadAndEnqueue(packetIn, this, this.client);
         ResourceLocation resourcelocation = packetIn.getChannelName();
         PacketBuffer packetbuffer = null;
@@ -2332,4 +2377,10 @@
     {
         return this.nbtQueryManager;
     }
+
+    // TISCM added getter
+    public Minecraft getClient()
+    {
+        return this.client;
+    }
 }
