--- a/net/minecraft/entity/monster/EntityDrowned.java
+++ b/net/minecraft/entity/monster/EntityDrowned.java
@@ -3,6 +3,7 @@
 import java.util.Random;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
 import net.minecraft.entity.EntityCreature;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.EntityType;
@@ -30,12 +31,7 @@
 import net.minecraft.inventory.EntityEquipmentSlot;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
-import net.minecraft.pathfinding.Path;
-import net.minecraft.pathfinding.PathNavigate;
-import net.minecraft.pathfinding.PathNavigateGround;
-import net.minecraft.pathfinding.PathNavigateSwimmer;
-import net.minecraft.pathfinding.PathNodeType;
-import net.minecraft.pathfinding.PathPoint;
+import net.minecraft.pathfinding.*;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.SoundEvent;
@@ -55,6 +51,9 @@
     protected final PathNavigateSwimmer waterNavigator;
     protected final PathNavigateGround groundNavigator;
 
+    // TISCM drownedNavigatorMemoryLeakFix
+    private final PathNavigate initialEntityNavigation;
+
     public EntityDrowned(World p_i48903_1_)
     {
         super(EntityType.DROWNED, p_i48903_1_);
@@ -63,8 +62,17 @@
         this.setPathPriority(PathNodeType.WATER, 0.0F);
         this.waterNavigator = new PathNavigateSwimmer(this, p_i48903_1_);
         this.groundNavigator = new PathNavigateGround(this, p_i48903_1_);
+
+        // TISCM drownedNavigatorMemoryLeakFix
+        this.initialEntityNavigation = this.navigator;
     }
 
+    // TISCM drownedNavigatorMemoryLeakFix
+    public PathNavigate getInitialEntityNavigation()
+    {
+        return this.initialEntityNavigation;
+    }
+
     protected void applyEntityAI()
     {
         this.tasks.addTask(1, new EntityDrowned.AIGoToWater(this, 1.0D));
