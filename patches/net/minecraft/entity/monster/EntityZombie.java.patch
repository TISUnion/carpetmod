--- a/net/minecraft/entity/monster/EntityZombie.java
+++ b/net/minecraft/entity/monster/EntityZombie.java
@@ -5,6 +5,10 @@
 import java.util.List;
 import java.util.UUID;
 import javax.annotation.Nullable;
+
+import carpet.CarpetServer;
+import carpet.commands.lifetime.spawning.LiteralSpawningReason;
+import carpet.settings.CarpetSettings;
 import net.minecraft.block.Block;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.CreatureAttribute;
@@ -283,6 +287,12 @@
                 flag = false;
             }
 
+            // TISCM undeadDontBurnInSunlight
+            if (CarpetSettings.undeadDontBurnInSunlight)
+            {
+                flag = false;
+            }
+
             if (flag)
             {
                 this.setFire(8);
@@ -368,6 +378,8 @@
 
                         if (!this.world.isAnyPlayerWithinRangeAt((double)i1, (double)j1, (double)k1, 7.0D) && this.world.checkNoEntityCollision(entityzombie, entityzombie.getBoundingBox()) && this.world.isCollisionBoxesEmpty(entityzombie, entityzombie.getBoundingBox()) && !this.world.containsAnyLiquid(entityzombie.getBoundingBox()))
                         {
+                            entityzombie.recordSpawning(LiteralSpawningReason.ZOMBIE_REINFORCE);  // TISCM lifetime tracker
+
                             this.world.spawnEntity(entityzombie);
                             entityzombie.setAttackTarget(entitylivingbase);
                             entityzombie.onInitialSpawn(this.world.getDifficultyForLocation(new BlockPos(entityzombie)), (IEntityLivingData)null, (NBTTagCompound)null);
@@ -548,7 +560,10 @@
 
         if (entityLivingData == null)
         {
-            entityLivingData = new EntityZombie.GroupData(this.world.rand.nextFloat() < 0.05F);
+            // TISCM spawnBabyProbably
+//            entityLivingData = new EntityZombie.GroupData(this.world.rand.nextFloat() < 0.05F);
+            boolean forcedBabyTISCM = CarpetSettings.spawnBabyProbably > 0 && CarpetServer.rand.nextFloat() <= CarpetSettings.spawnBabyProbably;
+            entityLivingData = new EntityZombie.GroupData(this.world.rand.nextFloat() < 0.05F || forcedBabyTISCM);
         }
 
         if (entityLivingData instanceof EntityZombie.GroupData)
@@ -559,6 +574,9 @@
             {
                 this.setChild(true);
 
+                // TISCM spawnJockeyProbably
+                boolean forcedJockeyTISCM = CarpetSettings.spawnJockeyProbably > 0 && CarpetServer.rand.nextFloat() <= CarpetSettings.spawnJockeyProbably;
+
                 if ((double)this.world.rand.nextFloat() < 0.05D)
                 {
                     List<EntityChicken> list = this.world.getEntitiesWithinAABB(EntityChicken.class, this.getBoundingBox().grow(5.0D, 3.0D, 5.0D), EntitySelectors.IS_STANDALONE);
@@ -570,7 +588,7 @@
                         this.startRiding(entitychicken);
                     }
                 }
-                else if ((double)this.world.rand.nextFloat() < 0.05D)
+                else if ((double)this.world.rand.nextFloat() < 0.05D || forcedJockeyTISCM  /* TISCM spawnJockeyProbably */)
                 {
                     EntityChicken entitychicken1 = new EntityChicken(this.world);
                     entitychicken1.setLocationAndAngles(this.posX, this.posY, this.posZ, this.rotationYaw, 0.0F);
