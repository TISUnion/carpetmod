--- a/net/minecraft/block/BlockNote.java
+++ b/net/minecraft/block/BlockNote.java
@@ -1,7 +1,11 @@
 package net.minecraft.block;
 
+import carpet.logging.LoggerRegistry;
+import carpet.logging.threadstone.ThreadstoneLogger;
+import carpet.settings.CarpetSettings;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.init.Blocks;
 import net.minecraft.init.Particles;
 import net.minecraft.item.BlockItemUseContext;
 import net.minecraft.state.BooleanProperty;
@@ -11,14 +15,18 @@
 import net.minecraft.state.properties.BlockStateProperties;
 import net.minecraft.state.properties.NoteBlockInstrument;
 import net.minecraft.stats.StatList;
+import net.minecraft.tileentity.TileEntity;
+import net.minecraft.tileentity.TileEntityComparator;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.EnumHand;
+import net.minecraft.util.HttpUtil;
 import net.minecraft.util.SoundCategory;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.IWorld;
 import net.minecraft.world.World;
+import redstone.multimeter.block.MeterableBlock;
 
-public class BlockNote extends Block
+public class BlockNote extends Block implements MeterableBlock /*RSMM*/
 {
     public static final EnumProperty<NoteBlockInstrument> INSTRUMENT = BlockStateProperties.NOTE_BLOCK_INSTRUMENT;
     public static final BooleanProperty POWERED = BlockStateProperties.POWERED;
@@ -44,8 +52,21 @@
     {
         boolean flag = worldIn.isBlockPowered(pos);
 
+        logPowered(worldIn, pos, flag); // RSMM
+
         if (flag != state.get(POWERED))
         {
+            if (CarpetSettings.debugNoteBlocks && this.isDebugNoteBlocksTarget(worldIn, pos))
+            {
+                // flag=18 -> no updates
+                worldIn.setBlockState(pos, state.with(POWERED, Boolean.valueOf(flag)), 18);
+                if (flag)  // rising edge
+                {
+                    this.debugNoteBlocksImpl(worldIn, pos);
+                }
+                return;
+            }
+
             if (flag)
             {
                 this.triggerNote(worldIn, pos);
@@ -55,6 +76,57 @@
         }
     }
 
+    // TISCM - debugNoteBlocks
+    private boolean isDebugNoteBlocksTarget(World worldIn, BlockPos pos)
+    {
+        Block baseBlock = worldIn.getBlockState(pos.down()).getBlock();
+        return baseBlock == Blocks.PURPUR_BLOCK || baseBlock == Blocks.COMPARATOR || baseBlock == Blocks.ACTIVATOR_RAIL;
+    }
+
+    // TISCM - debugNoteBlocks
+    private void debugNoteBlocksImpl(World worldIn, BlockPos pos)
+    {
+        Block baseBlock = worldIn.getBlockState(pos.down()).getBlock();
+        if (baseBlock == Blocks.PURPUR_BLOCK)
+        {
+            HttpUtil.DOWNLOADER_EXECUTOR.submit(() -> {
+                // IBlockState#updateNeighbors = PP update
+                if (CarpetSettings.threadstoneLogger && LoggerRegistry.__threadstone)
+                {
+                    ThreadstoneLogger.getInstance().onNoteBlockDebugThreadStarted();
+                }
+                try
+                {
+                    this.getDefaultState().updateNeighbors(worldIn, pos, 2);
+                }
+                catch (Throwable throwable)
+                {
+                    ThreadstoneLogger.getInstance().onExceptionallyEndedAsyncThread(throwable);
+                }
+            });
+        }
+        else if (baseBlock == Blocks.COMPARATOR)
+        {
+            TileEntity tileEntity = worldIn.getTileEntity(pos.down());
+            if (tileEntity instanceof TileEntityComparator)
+            {
+                int power = ((TileEntityComparator) tileEntity).getOutputSignal();
+                try
+                {
+                    Thread.sleep(10L * power);
+                }
+                catch (InterruptedException e)
+                {
+                    throw new RuntimeException(e);
+                }
+            }
+        }
+        else if (baseBlock == Blocks.ACTIVATOR_RAIL)
+        {
+            throw new StackOverflowError("Update suppression simulated by debugNoteBlocks from TISCM.");
+        }
+    }
+
     private void triggerNote(World worldIn, BlockPos pos)
     {
         if (worldIn.getBlockState(pos.up()).isAir())
@@ -101,4 +173,16 @@
     {
         builder.add(INSTRUMENT, POWERED, NOTE);
     }
+
+    // RSMM
+    @Override
+    public boolean logPoweredOnBlockUpdate() {
+        return false;
+    }
+
+    // RSMM
+    @Override
+    public boolean isActive(World world, BlockPos pos, IBlockState state) {
+        return state.get(POWERED);
+    }
 }
